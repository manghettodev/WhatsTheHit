#!/user/bin/env node

//Gestione variabili di sistema
require("dotenv").config();

//Dipendenze

const app = require('../app'),
  debug = require('debug')('whatsthehit:server'),
  http = require('http'),
  https = require("https"),
  fs = require('fs')

//Settaggio porta del server

var port = normalizePort(process.env.PORT || '8080');
var ssl_port = normalizePort(process.env.SSL_PORT || '8443');

//Creazione server

var options = {
  key: fs.readFileSync('cert/private.key', "utf8"),
  cert: fs.readFileSync('cert/mydomain.cert', "utf8")
}

var ssl_server = https.createServer(options, app).listen(ssl_port);
var server = http.createServer(app).listen(port);

//Impostazione server

server.on('error', onError);
ssl_server.on('error', onError);

server.on('listening', onListening);
ssl_server.on('listening', onListening);

//Funzione di normalizzazione del valore della porta

function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    return val;
  }

  if (port >= 0) {
    return port;
  }

  return false;
}

//Ascoltatori per il caso di errore

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' richiede privilegi elevati');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' Ã¨ occupata');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

//Ascoltatori per il caso di ascolto

function onListening() {
  if(this.key) {
    debug("Server HTTPS in ascolto all'indirizzo https://localhost:"+ssl_port);
  } else {
    debug("Server HTTP in ascolto all'indirizzo https://localhost:"+port);
  }
}
